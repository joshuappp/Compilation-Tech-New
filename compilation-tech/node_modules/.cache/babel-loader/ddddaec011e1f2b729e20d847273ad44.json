{"ast":null,"code":"var _jsxFileName = \"/Users/joshuaphaho/Desktop/Compilation Tech/compilation-tech/src/components/ImageSlider/ImageSlider.js\",\n    _s = $RefreshSig$();\n\nimport classes from './ImageSlider.module.css';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageSlider = props => {\n  _s();\n\n  let [counter, setCounter] = useState(0);\n  let [selectImage, setSelectImage] = useState(0);\n  const images = props.imageProperties.map(imageDetail => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: imageDetail.image_details,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageDetail.image,\n        alt: imageDetail.category\n      }, imageDetail.image, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  });\n\n  function updateMessage() {\n    console.log(\"Yes\");\n    setSelectImage(-1);\n\n    if (counter == 7) {\n      console.log(\"0: \" + 0);\n      setCounter(0);\n    } else {\n      console.log(counter + 1);\n      setCounter(counter + 1);\n    }\n\n    ;\n  }\n\n  useEffect(() => {\n    if (props.slideId == -1) {\n      const timer = setTimeout(() => {\n        updateMessage();\n      }, 3000);\n      return () => clearTimeout(timer);\n    } else {\n      setCounter(props.slideId);\n      setSelectImage(-1);\n    }\n  }, [counter]);\n  console.log(\"Hi There\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.ImageSlider,\n    children: images[counter]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ImageSlider, \"1DB/JO+JwAQhBUqSdvtsVvyO140=\");\n\n_c = ImageSlider;\nexport default ImageSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageSlider\");","map":{"version":3,"sources":["/Users/joshuaphaho/Desktop/Compilation Tech/compilation-tech/src/components/ImageSlider/ImageSlider.js"],"names":["classes","React","useEffect","useState","useCallback","ImageSlider","props","counter","setCounter","selectImage","setSelectImage","images","imageProperties","map","imageDetail","image_details","image","category","updateMessage","console","log","slideId","timer","setTimeout","clearTimeout"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,0BAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B,MAAI,CAACC,OAAD,EAASC,UAAT,IAAuBL,QAAQ,CAAC,CAAD,CAAnC;AACA,MAAI,CAACM,WAAD,EAAaC,cAAb,IAA+BP,QAAQ,CAAC,CAAD,CAA3C;AAEA,QAAMQ,MAAM,GAAGL,KAAK,CAACM,eAAN,CAAsBC,GAAtB,CAA0BC,WAAW,IAAI;AACpD,wBAAO;AAAK,MAAA,SAAS,EAAEA,WAAW,CAACC,aAA5B;AAAA,6BACK;AAAK,QAAA,GAAG,EAAED,WAAW,CAACE,KAAtB;AAA6B,QAAA,GAAG,EAAEF,WAAW,CAACG;AAA9C,SAA6DH,WAAW,CAACE,KAAzE;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YAAP;AAGH,GAJc,CAAf;;AAMA,WAASE,aAAT,GAAwB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAV,IAAAA,cAAc,CAAC,CAAC,CAAF,CAAd;;AACA,QAAGH,OAAO,IAAI,CAAd,EAAgB;AACZY,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAM,CAAlB;AACAZ,MAAAA,UAAU,CAAC,CAAD,CAAV;AACH,KAHD,MAGK;AACDW,MAAAA,OAAO,CAACC,GAAR,CAAYb,OAAO,GAAC,CAApB;AACAC,MAAAA,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;AACH;;AAAA;AACJ;;AAEDL,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAGI,KAAK,CAACe,OAAN,IAAiB,CAAC,CAArB,EAAuB;AACnB,YAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC3BL,QAAAA,aAAa;AAChB,OAFuB,EAErB,IAFqB,CAAxB;AAGA,aAAO,MAAMM,YAAY,CAACF,KAAD,CAAzB;AACH,KALD,MAKK;AACDd,MAAAA,UAAU,CAACF,KAAK,CAACe,OAAP,CAAV;AACAX,MAAAA,cAAc,CAAC,CAAC,CAAF,CAAd;AACH;AAEJ,GAZQ,EAYN,CAACH,OAAD,CAZM,CAAT;AAcAY,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAGA,sBAAO;AAAK,IAAA,SAAS,EAAEpB,OAAO,CAACK,WAAxB;AAAA,cACMM,MAAM,CAACJ,OAAD;AADZ;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH,CA5CD;;GAAMF,W;;KAAAA,W;AA8CN,eAAeA,WAAf","sourcesContent":["import classes from './ImageSlider.module.css';\nimport React, { useEffect,useState,useCallback } from 'react';\nconst ImageSlider = (props) => {\n\n    let [counter,setCounter] = useState(0);\n    let [selectImage,setSelectImage] = useState(0);\n\n    const images = props.imageProperties.map(imageDetail => {\n        return <div className={imageDetail.image_details}>\n                    <img src={imageDetail.image} alt={imageDetail.category} key={imageDetail.image} />\n               </div>\n    });\n\n    function updateMessage(){\n        console.log(\"Yes\");\n        setSelectImage(-1);\n        if(counter == 7){\n            console.log(\"0: \"+0);\n            setCounter(0);\n        }else{\n            console.log(counter+1);\n            setCounter(counter+1);\n        };\n    }\n\n    useEffect(() => {\n\n        if(props.slideId == -1){\n            const timer = setTimeout(() => {\n                updateMessage();\n            }, 3000);\n            return () => clearTimeout(timer);\n        }else{\n            setCounter(props.slideId);\n            setSelectImage(-1);\n        }\n        \n    }, [counter]);\n\n    console.log(\"Hi There\");\n    \n\n    return <div className={classes.ImageSlider}>\n                {images[counter]}\n           </div>\n    \n}\n\nexport default ImageSlider;"]},"metadata":{},"sourceType":"module"}